{"version":3,"file":"static/js/544.54397692.chunk.js","mappings":"wMAGaA,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC5BC,GAAWC,EAAAA,EAAAA,MACXC,EAAUH,EAAI,UAAMA,EAAN,KAAgB,GAEpC,OACE,wBACGD,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAL,OAAeE,GAAMG,MAAO,CAAEC,KAAMR,GAA5C,SACGK,KAFID,EADC,KASjB,C,gIClBM,IAAMK,EAAM,mCACNC,EAAM,+BACNC,EAAQ,CAAEC,SAAU,WAAYC,OAAQ,UACxCC,EAAM,iC,+LCCNC,EAAY,mCAAG,WAAOC,EAAQC,GAAf,gFACpBC,EACJF,IAAWL,EAAAA,GAAAA,SAAX,UACOD,EAAAA,GADP,uCACyCD,EAAAA,IADzC,UAEOC,EAAAA,GAFP,iCAEmCD,EAAAA,GAFnC,kBAEgDQ,GAJxB,kBAOFE,EAAAA,EAAAA,IAAUD,GAPR,UASD,OAFjBE,EAPkB,QASZC,OATY,sBAUhB,IAAIC,MAAM,+BAVM,gCAajBF,EAAQG,MAbS,kCAexBC,EAAAA,GAAAA,MAAY,KAAMC,SAfM,0DAAH,wDAmBZC,EAAa,mCAAG,WAAMtB,GAAN,gFACrBc,EADqB,UACZR,EAAAA,GADY,kBACCN,EADD,oBACeK,EAAAA,IADf,kBAIHU,EAAAA,EAAAA,IAAUD,GAJP,UAKF,OADjBE,EAJmB,QAKbC,OALa,sBAMjB,IAAIC,MAAM,+BANO,gCAQlBF,EAAQG,MARU,kCAUzBC,EAAAA,GAAAA,MAAY,KAAMC,SAVO,0DAAH,sDAcbE,EAAe,mCAAG,WAAMvB,GAAN,gFACvBc,EADuB,UACdR,EAAAA,GADc,kBACDN,EADC,4BACqBK,EAAAA,IADrB,kBAILU,EAAAA,EAAAA,IAAUD,GAJL,UAKJ,OADjBE,EAJqB,QAKfC,OALe,sBAMnB,IAAIC,MAAM,+BANS,gCASpBF,EAAQG,MATY,kCAW3BC,EAAAA,GAAAA,MAAY,KAAMC,SAXS,0DAAH,sDAefG,EAAkB,mCAAG,WAAMxB,GAAN,gFAC1Bc,EAD0B,UACjBR,EAAAA,GADiB,kBACJN,EADI,4BACkBK,EAAAA,IADlB,kBAIRU,EAAAA,EAAAA,IAAUD,GAJF,UAKP,OADjBE,EAJwB,QAKlBC,OALkB,sBAMtB,IAAIC,MAAM,+BANY,gCASvBF,EAAQG,MATe,kCAW9BC,EAAAA,GAAAA,MAAY,KAAMC,SAXY,0DAAH,qD,uGCnC/B,UAZa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAO/B,EAAP,KAAegC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAaJ,EAAAA,GAAAA,UAAgBqB,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAChCH,GAAU,OAAIG,EAAQ9B,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,KADM,GAGnC,GAAE,KAEI,SAAC,IAAD,CAAWP,OAAQA,EAAQC,KAAM,UACzC,C","sources":["components/ListMovie/ListMovie.jsx","components/const/const.js","components/services/fetchFilmApi.js","pages/Home/Home.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const ListMovie = ({ movies, path }) => {\n  const location = useLocation();\n  const addPath = path ? `${path}/` : '';\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`${addPath}${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n","export const KEY = '669f3cb1f35b3303e76bb3fe15475760';\nexport const API = 'https://api.themoviedb.org/3';\nexport const MOVIE = { TRENDING: 'trending', SEARCH: 'search' };\nexport const IMG = 'https://image.tmdb.org/t/p/w500';\n","import axios from 'axios';\nimport { API, KEY, MOVIE } from '../const/const';\nimport { toast } from 'react-toastify';\n\nexport const fetchFilmApi = async (params, search) => {\n  const URL =\n    params === MOVIE.TRENDING\n      ? `${API}/trending/movie/day?api_key=${KEY}`\n      : `${API}/search/movie?api_key=${KEY}&query=${search}`;\n\n  try {\n    const resolve = await axios.get(URL);\n\n    if (resolve.status !== 200) {\n      throw new Error('The service is unavailable.');\n    }\n\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchFilmById = async id => {\n  const URL = `${API}/movie/${id}?api_key=${KEY}`;\n\n  try {\n    const resolve = await axios.get(URL);\n    if (resolve.status !== 200) {\n      throw new Error('The service is unavailable.');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchFilmByCast = async id => {\n  const URL = `${API}/movie/${id}/credits?api_key=${KEY}`;\n\n  try {\n    const resolve = await axios.get(URL);\n    if (resolve.status !== 200) {\n      throw new Error('The service is unavailable.');\n    }\n\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchFilmByReviews = async id => {\n  const URL = `${API}/movie/${id}/reviews?api_key=${KEY}`;\n\n  try {\n    const resolve = await axios.get(URL);\n    if (resolve.status !== 200) {\n      throw new Error('The service is unavailable.');\n    }\n\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { fetchFilmApi } from '../../components/services/fetchFilmApi';\nimport { ListMovie } from '../../components/ListMovie/ListMovie';\nimport { MOVIE } from '../../components/const/const';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchFilmApi(MOVIE.TRENDING).then(({ results }) =>\n      setMovies([...results.map(({ id, title }) => ({ id, title }))])\n    );\n  }, []);\n\n  return <ListMovie movies={movies} path={'movies'} />;\n};\n\nexport default Home;\n"],"names":["ListMovie","movies","path","location","useLocation","addPath","map","id","title","to","state","from","KEY","API","MOVIE","TRENDING","SEARCH","IMG","fetchFilmApi","params","search","URL","axios","resolve","status","Error","data","toast","message","fetchFilmById","fetchFilmByCast","fetchFilmByReviews","useState","setMovies","useEffect","then","results"],"sourceRoot":""}